{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport { useThemeUI } from '@theme-ui/core';\nimport { defaultBreakpoints } from '@theme-ui/css';\n\nconst useBreakpointIndex = function () {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const context = useThemeUI();\n  const {\n    defaultIndex = 0\n  } = options;\n  const breakpoints = context.theme && context.theme.breakpoints || defaultBreakpoints;\n\n  if (typeof defaultIndex !== 'number') {\n    throw new TypeError(`Default breakpoint index should be a number. Got: ${defaultIndex}, ${typeof defaultIndex}`);\n  } else if (defaultIndex < 0 || defaultIndex > breakpoints.length - 1) {\n    throw new RangeError(`Default breakpoint index out of range. Theme has ${breakpoints.length} breakpoints, got index ${defaultIndex}`);\n  }\n\n  const [value, setValue] = useState(defaultIndex);\n  useEffect(() => {\n    const getIndex = () => breakpoints.filter(bp => {\n      const query = bp.includes('@media') ? bp.replace('@media ', '') : `screen and (min-width: ${bp})`;\n      return window.matchMedia(query).matches;\n    }).length;\n\n    const onResize = () => {\n      const newValue = getIndex();\n\n      if (value !== newValue) {\n        setValue(newValue);\n      }\n    };\n\n    onResize();\n    window.addEventListener('resize', onResize);\n    return () => window.removeEventListener('resize', onResize);\n  }, [breakpoints, value]);\n  return value;\n};\n\nfunction useResponsiveValue(values) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n    theme\n  } = useThemeUI();\n  const array = typeof values === 'function' ? values(theme) : values;\n  const index = useBreakpointIndex(options);\n  return array[index >= array.length ? array.length - 1 : index];\n}\n\nexport { useBreakpointIndex, useResponsiveValue };","map":{"version":3,"names":["useState","useEffect","useThemeUI","defaultBreakpoints","useBreakpointIndex","options","context","defaultIndex","breakpoints","theme","TypeError","length","RangeError","value","setValue","getIndex","filter","bp","query","includes","replace","window","matchMedia","matches","onResize","newValue","addEventListener","removeEventListener","useResponsiveValue","values","array","index"],"sources":["C:/Users/voram/Downloads/website-pawzsible-main/website-pawzsible-main/node_modules/@theme-ui/match-media/dist/theme-ui-match-media.esm.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useThemeUI } from '@theme-ui/core';\nimport { defaultBreakpoints } from '@theme-ui/css';\n\nconst useBreakpointIndex = (options = {}) => {\n  const context = useThemeUI();\n  const {\n    defaultIndex = 0\n  } = options;\n  const breakpoints = context.theme && context.theme.breakpoints || defaultBreakpoints;\n\n  if (typeof defaultIndex !== 'number') {\n    throw new TypeError(`Default breakpoint index should be a number. Got: ${defaultIndex}, ${typeof defaultIndex}`);\n  } else if (defaultIndex < 0 || defaultIndex > breakpoints.length - 1) {\n    throw new RangeError(`Default breakpoint index out of range. Theme has ${breakpoints.length} breakpoints, got index ${defaultIndex}`);\n  }\n\n  const [value, setValue] = useState(defaultIndex);\n  useEffect(() => {\n    const getIndex = () => breakpoints.filter(bp => {\n      const query = bp.includes('@media') ? bp.replace('@media ', '') : `screen and (min-width: ${bp})`;\n      return window.matchMedia(query).matches;\n    }).length;\n\n    const onResize = () => {\n      const newValue = getIndex();\n\n      if (value !== newValue) {\n        setValue(newValue);\n      }\n    };\n\n    onResize();\n    window.addEventListener('resize', onResize);\n    return () => window.removeEventListener('resize', onResize);\n  }, [breakpoints, value]);\n  return value;\n};\nfunction useResponsiveValue(values, options = {}) {\n  const {\n    theme\n  } = useThemeUI();\n  const array = typeof values === 'function' ? values(theme) : values;\n  const index = useBreakpointIndex(options);\n  return array[index >= array.length ? array.length - 1 : index];\n}\n\nexport { useBreakpointIndex, useResponsiveValue };\n"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,kBAAT,QAAmC,eAAnC;;AAEA,MAAMC,kBAAkB,GAAG,YAAkB;EAAA,IAAjBC,OAAiB,uEAAP,EAAO;EAC3C,MAAMC,OAAO,GAAGJ,UAAU,EAA1B;EACA,MAAM;IACJK,YAAY,GAAG;EADX,IAEFF,OAFJ;EAGA,MAAMG,WAAW,GAAGF,OAAO,CAACG,KAAR,IAAiBH,OAAO,CAACG,KAAR,CAAcD,WAA/B,IAA8CL,kBAAlE;;EAEA,IAAI,OAAOI,YAAP,KAAwB,QAA5B,EAAsC;IACpC,MAAM,IAAIG,SAAJ,CAAe,qDAAoDH,YAAa,KAAI,OAAOA,YAAa,EAAxG,CAAN;EACD,CAFD,MAEO,IAAIA,YAAY,GAAG,CAAf,IAAoBA,YAAY,GAAGC,WAAW,CAACG,MAAZ,GAAqB,CAA5D,EAA+D;IACpE,MAAM,IAAIC,UAAJ,CAAgB,oDAAmDJ,WAAW,CAACG,MAAO,2BAA0BJ,YAAa,EAA7H,CAAN;EACD;;EAED,MAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAACO,YAAD,CAAlC;EACAN,SAAS,CAAC,MAAM;IACd,MAAMc,QAAQ,GAAG,MAAMP,WAAW,CAACQ,MAAZ,CAAmBC,EAAE,IAAI;MAC9C,MAAMC,KAAK,GAAGD,EAAE,CAACE,QAAH,CAAY,QAAZ,IAAwBF,EAAE,CAACG,OAAH,CAAW,SAAX,EAAsB,EAAtB,CAAxB,GAAqD,0BAAyBH,EAAG,GAA/F;MACA,OAAOI,MAAM,CAACC,UAAP,CAAkBJ,KAAlB,EAAyBK,OAAhC;IACD,CAHsB,EAGpBZ,MAHH;;IAKA,MAAMa,QAAQ,GAAG,MAAM;MACrB,MAAMC,QAAQ,GAAGV,QAAQ,EAAzB;;MAEA,IAAIF,KAAK,KAAKY,QAAd,EAAwB;QACtBX,QAAQ,CAACW,QAAD,CAAR;MACD;IACF,CAND;;IAQAD,QAAQ;IACRH,MAAM,CAACK,gBAAP,CAAwB,QAAxB,EAAkCF,QAAlC;IACA,OAAO,MAAMH,MAAM,CAACM,mBAAP,CAA2B,QAA3B,EAAqCH,QAArC,CAAb;EACD,CAjBQ,EAiBN,CAAChB,WAAD,EAAcK,KAAd,CAjBM,CAAT;EAkBA,OAAOA,KAAP;AACD,CAjCD;;AAkCA,SAASe,kBAAT,CAA4BC,MAA5B,EAAkD;EAAA,IAAdxB,OAAc,uEAAJ,EAAI;EAChD,MAAM;IACJI;EADI,IAEFP,UAAU,EAFd;EAGA,MAAM4B,KAAK,GAAG,OAAOD,MAAP,KAAkB,UAAlB,GAA+BA,MAAM,CAACpB,KAAD,CAArC,GAA+CoB,MAA7D;EACA,MAAME,KAAK,GAAG3B,kBAAkB,CAACC,OAAD,CAAhC;EACA,OAAOyB,KAAK,CAACC,KAAK,IAAID,KAAK,CAACnB,MAAf,GAAwBmB,KAAK,CAACnB,MAAN,GAAe,CAAvC,GAA2CoB,KAA5C,CAAZ;AACD;;AAED,SAAS3B,kBAAT,EAA6BwB,kBAA7B"},"metadata":{},"sourceType":"module"}