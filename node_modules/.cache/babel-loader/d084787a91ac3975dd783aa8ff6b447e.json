{"ast":null,"code":"import { jsx } from '@theme-ui/core';\nimport { css, get } from '@theme-ui/css';\nimport { useMemo } from 'react';\nimport { useMDXComponents, MDXProvider as MDXProvider$1 } from '@mdx-js/react';\n/** @jsx jsx */\n// mdx components\n\nconst tags = ['p', 'b', 'i', 'a', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'img', 'pre', 'code', 'ol', 'ul', 'li', 'blockquote', 'hr', 'em', 'table', 'tr', 'th', 'td', 'em', 'strong', 'del', // mdx\n'inlineCode', 'thematicBreak', // other\n'div', // theme-ui\n'root'];\nconst aliases = {\n  inlineCode: 'code',\n  thematicBreak: 'hr',\n  root: 'div'\n};\n\nconst isAlias = x => x in aliases;\n\nconst alias = n => isAlias(n) ? aliases[n] : n;\n\nconst themed = key => theme => css(get(theme, `styles.${key}`))(theme); // opt out of typechecking whenever `as` prop is used\n\n\nconst createThemedComponent = (name, variant) => {\n  const variantStyles = themed(variant);\n\n  const component = props => {\n    const extraStyles = {};\n\n    if (name === 'th' || name === 'td') {\n      const {\n        align\n      } = props;\n      if (align !== 'char') extraStyles.textAlign = align;\n    }\n\n    const css = props['css'];\n    return jsx(name, { ...props,\n      css: [props.css, variantStyles, extraStyles].filter(Boolean)\n    });\n  };\n\n  component.displayName = `Themed(${name})`;\n  return component;\n};\n\nconst _Themed = createThemedComponent('div', 'div');\n\nconst components = {};\nconst Themed = _Themed;\ntags.forEach(tag => {\n  const component = createThemedComponent(alias(tag), tag);\n  components[tag] = component;\n  Themed[tag] = component;\n});\n\nconst createComponents = comps => {\n  const componentKeys = Object.keys(comps);\n  const next = { ...components\n  }; // We enrich user's components with the styles from theme.styles.\n  // Example: `components.p` will get the styles from `theme.styles.p` as className.\n  // todo: test this behaviour\n\n  componentKeys.forEach(key => {\n    const componentAtKey = comps[key];\n\n    if (componentAtKey) {\n      const component = props => {\n        return jsx(componentAtKey, { ...props,\n          css: themed(key)\n        });\n      };\n\n      component.displayName = \"MdxComponents('\" + key + \"')\";\n      next[key] = component;\n    }\n  });\n  return next;\n};\n\nconst MDXProvider = _ref => {\n  let {\n    components,\n    children\n  } = _ref;\n  const outer = useMDXComponents();\n  const themedComponents = useMemo(() => {\n    return createComponents({ ...outer,\n      ...components\n    });\n  }, [components, outer]);\n  return jsx(MDXProvider$1, {\n    components: themedComponents,\n    children\n  });\n};\n\nexport { MDXProvider, Themed, components, themed };","map":{"version":3,"names":["jsx","css","get","useMemo","useMDXComponents","MDXProvider","MDXProvider$1","tags","aliases","inlineCode","thematicBreak","root","isAlias","x","alias","n","themed","key","theme","createThemedComponent","name","variant","variantStyles","component","props","extraStyles","align","textAlign","filter","Boolean","displayName","_Themed","components","Themed","forEach","tag","createComponents","comps","componentKeys","Object","keys","next","componentAtKey","children","outer","themedComponents"],"sources":["C:/Users/voram/Downloads/website-pawzsible-main/website-pawzsible-main/node_modules/@theme-ui/mdx/dist/theme-ui-mdx.esm.js"],"sourcesContent":["import { jsx } from '@theme-ui/core';\nimport { css, get } from '@theme-ui/css';\nimport { useMemo } from 'react';\nimport { useMDXComponents, MDXProvider as MDXProvider$1 } from '@mdx-js/react';\n\n/** @jsx jsx */\n// mdx components\nconst tags = ['p', 'b', 'i', 'a', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'img', 'pre', 'code', 'ol', 'ul', 'li', 'blockquote', 'hr', 'em', 'table', 'tr', 'th', 'td', 'em', 'strong', 'del', // mdx\n'inlineCode', 'thematicBreak', // other\n'div', // theme-ui\n'root'];\nconst aliases = {\n  inlineCode: 'code',\n  thematicBreak: 'hr',\n  root: 'div'\n};\n\nconst isAlias = x => x in aliases;\n\nconst alias = n => isAlias(n) ? aliases[n] : n;\n\nconst themed = key => theme => css(get(theme, `styles.${key}`))(theme); // opt out of typechecking whenever `as` prop is used\n\nconst createThemedComponent = (name, variant) => {\n  const variantStyles = themed(variant);\n\n  const component = props => {\n    const extraStyles = {};\n\n    if (name === 'th' || name === 'td') {\n      const {\n        align\n      } = props;\n      if (align !== 'char') extraStyles.textAlign = align;\n    }\n\n    const css = props['css'];\n    return jsx(name, { ...props,\n      css: [props.css, variantStyles, extraStyles].filter(Boolean)\n    });\n  };\n\n  component.displayName = `Themed(${name})`;\n  return component;\n};\n\nconst _Themed = createThemedComponent('div', 'div');\n\nconst components = {};\nconst Themed = _Themed;\ntags.forEach(tag => {\n  const component = createThemedComponent(alias(tag), tag);\n  components[tag] = component;\n  Themed[tag] = component;\n});\n\nconst createComponents = comps => {\n  const componentKeys = Object.keys(comps);\n  const next = { ...components\n  }; // We enrich user's components with the styles from theme.styles.\n  // Example: `components.p` will get the styles from `theme.styles.p` as className.\n  // todo: test this behaviour\n\n  componentKeys.forEach(key => {\n    const componentAtKey = comps[key];\n\n    if (componentAtKey) {\n      const component = props => {\n        return jsx(componentAtKey, { ...props,\n          css: themed(key)\n        });\n      };\n\n      component.displayName = \"MdxComponents('\" + key + \"')\";\n      next[key] = component;\n    }\n  });\n  return next;\n};\n\nconst MDXProvider = ({\n  components,\n  children\n}) => {\n  const outer = useMDXComponents();\n  const themedComponents = useMemo(() => {\n    return createComponents({ ...outer,\n      ...components\n    });\n  }, [components, outer]);\n  return jsx(MDXProvider$1, {\n    components: themedComponents,\n    children\n  });\n};\n\nexport { MDXProvider, Themed, components, themed };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}