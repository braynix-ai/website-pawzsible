{"ast":null,"code":"import React, { useState, useEffect, useCallback, useMemo, useLayoutEffect } from 'react';\nimport { useThemeUI, jsx, __ThemeUIInternalBaseThemeProvider } from '@theme-ui/core';\nimport { css, get } from '@theme-ui/css';\nimport { Global } from '@emotion/react';\n\nconst toVarName = key => `--theme-ui-${key.replace('-__default', '')}`;\n\nconst toVarValue = key => `var(${toVarName(key)})`;\n\nconst join = function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return args.filter(Boolean).join('-');\n};\n\nconst reservedKeys = new Set(['useCustomProperties', 'initialColorModeName', 'printColorModeName', 'initialColorMode', 'useLocalStorage', 'config']); // convert theme values to custom properties\n\nconst toCustomProperties = (obj, parent) => {\n  const next = Array.isArray(obj) ? [] : {};\n\n  for (let key in obj) {\n    const value = obj[key];\n    const name = join(parent, key);\n\n    if (value && typeof value === 'object') {\n      next[key] = toCustomProperties(value, name);\n      continue;\n    }\n\n    if (reservedKeys.has(key)) {\n      next[key] = value;\n      continue;\n    }\n\n    next[key] = toVarValue(name);\n  }\n\n  return next;\n};\n/**\n * @internal\n * Recursively transforms an object into CSS variables excluding \"modes\" key.\n */\n\n\nconst __objectToVars = (parent, obj) => {\n  let vars = {};\n\n  for (let key in obj) {\n    if (key === 'modes') continue;\n    const name = join(parent, key);\n    const value = obj[key];\n\n    if (value && typeof value === 'object') {\n      vars = { ...vars,\n        ...__objectToVars(name, value)\n      };\n    } else {\n      vars[toVarName(name)] = value;\n    }\n  }\n\n  return vars;\n};\n/**\n * @internal\n * Creates root styles for color modes.\n * - Transforms color scale into CSS variables.\n * - Sets background and text color.\n */\n\n\nconst __createColorStyles = function () {\n  let theme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    useCustomProperties,\n    initialColorModeName,\n    printColorModeName,\n    useRootStyles\n  } = theme.config || theme || {};\n  const colors = theme.rawColors || theme.colors;\n  if (!colors || useRootStyles === false) return {};\n\n  if (useCustomProperties === false) {\n    return css({\n      color: 'text',\n      bg: 'background'\n    })(theme);\n  }\n\n  const modes = colors.modes || {};\n\n  const styles = __createColorProperties(colors, modes);\n\n  if (printColorModeName) {\n    let printMode = modes[printColorModeName];\n    if (!printMode && printColorModeName === initialColorModeName) printMode = colors;\n\n    if (printMode) {\n      styles['@media print'] = __objectToVars('colors', printMode);\n    } else {\n      console.error(`Theme UI \\`printColorModeName\\` was not found in colors scale`, {\n        colors,\n        printColorModeName\n      });\n    }\n  }\n\n  const colorToVarValue = color => toVarValue(`colors-${color}`);\n\n  return css({ ...styles,\n    color: colorToVarValue('text'),\n    bg: colorToVarValue('background')\n  })(theme);\n};\n/**\n * @internal\n * Returns an object with colors turned into Custom CSS Properties and\n * .theme-ui-<colormode> classes used for no-flash serverside rendering.\n */\n\n\nfunction __createColorProperties(colors, modes) {\n  const styles = __objectToVars('colors', colors);\n\n  Object.keys(modes).forEach(mode => {\n    const className = `.theme-ui-${mode}`;\n    const key = `&${className}, ${className} &`;\n    styles[key] = __objectToVars('colors', modes[mode]);\n  });\n  return styles;\n}\n\nconst STORAGE_KEY = 'theme-ui-color-mode';\nconst DARK_QUERY = '(prefers-color-scheme: dark)';\nconst LIGHT_QUERY = '(prefers-color-scheme: light)';\nconst storage = {\n  get: () => {\n    try {\n      return window.localStorage.getItem(STORAGE_KEY);\n    } catch (err) {\n      console.warn('localStorage is disabled and color mode might not work as expected.', 'Please check your Site Settings.', err);\n    }\n  },\n  set: value => {\n    try {\n      window.localStorage.setItem(STORAGE_KEY, value);\n    } catch (err) {\n      console.warn('localStorage is disabled and color mode might not work as expected.', 'Please check your Site Settings.', err);\n    }\n  }\n};\n\nconst getPreferredColorScheme = () => {\n  if (typeof window !== 'undefined' && window.matchMedia) {\n    if (window.matchMedia(DARK_QUERY).matches) {\n      return 'dark';\n    }\n\n    if (window.matchMedia(LIGHT_QUERY).matches) {\n      return 'light';\n    }\n  }\n\n  return null;\n};\n\nconst useClientsideEffect = typeof window === 'undefined' ? () => {} : useLayoutEffect;\n\nconst TopLevelColorModeProvider = _ref => {\n  let {\n    outerCtx,\n    children\n  } = _ref;\n  const outerTheme = outerCtx.theme || {};\n  const {\n    initialColorModeName,\n    useColorSchemeMediaQuery,\n    useLocalStorage\n  } = outerTheme.config || outerTheme;\n  let [colorMode, setColorMode] = useState(() => {\n    const preferredMode = useColorSchemeMediaQuery !== false && getPreferredColorScheme();\n    return preferredMode || initialColorModeName;\n  }); // on first render, we read the color mode from localStorage and\n  // clear the class on document element body\n\n  useClientsideEffect(() => {\n    const stored = useLocalStorage !== false && storage.get();\n\n    if (typeof document !== 'undefined') {\n      document.documentElement.classList.remove('theme-ui-' + stored);\n    }\n\n    if (useColorSchemeMediaQuery !== 'system' && stored && stored !== colorMode) {\n      colorMode = stored;\n      setColorMode(stored);\n    }\n  }, []); // when mode changes, we save it to localStorage\n\n  useEffect(() => {\n    if (colorMode && useLocalStorage !== false) {\n      storage.set(colorMode);\n    }\n  }, [colorMode, useLocalStorage]);\n  const setPreferredColorScheme = useCallback(() => {\n    const preferredColorScheme = getPreferredColorScheme();\n    setColorMode(preferredColorScheme || initialColorModeName);\n  }, [initialColorModeName]);\n  useEffect(() => {\n    if (useColorSchemeMediaQuery === 'system' && window.matchMedia) {\n      // It doesn't matter if we add the listener only to the dark media query\n      // Because in our callback function we'll check for both media queries (light and dark).\n      const darkMQL = window.matchMedia(DARK_QUERY);\n\n      if (typeof darkMQL.addEventListener === 'function') {\n        darkMQL.addEventListener('change', setPreferredColorScheme);\n      } else if (typeof darkMQL.addListener === 'function') {\n        darkMQL.addListener(setPreferredColorScheme);\n      }\n    }\n\n    return () => {\n      if (useColorSchemeMediaQuery === 'system' && window.matchMedia) {\n        const darkMQL = window.matchMedia(DARK_QUERY);\n\n        if (typeof darkMQL.removeEventListener === 'function') {\n          darkMQL.removeEventListener('change', setPreferredColorScheme);\n        } else if (typeof darkMQL.removeListener === 'function') {\n          darkMQL.removeListener(setPreferredColorScheme);\n        }\n      }\n    };\n  }, [useColorSchemeMediaQuery, setPreferredColorScheme]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    var _outerTheme$colors, _outerTheme$colors2;\n\n    if ((_outerTheme$colors = outerTheme.colors) != null && _outerTheme$colors.modes && initialColorModeName && Object.keys(outerTheme.colors.modes).indexOf(initialColorModeName) > -1) {\n      console.warn('[theme-ui] The `initialColorModeName` value should be a unique name' + ' and cannot reference a key in `theme.colors.modes`.');\n    }\n\n    const allColorKeys = [];\n\n    const flattenKeys = obj => {\n      Object.keys(obj).forEach(key => {\n        allColorKeys.push(key);\n\n        if (typeof obj[key] === 'object') {\n          flattenKeys(obj[key]);\n        }\n      });\n      return allColorKeys;\n    };\n\n    flattenKeys((_outerTheme$colors2 = outerTheme.colors) != null ? _outerTheme$colors2 : {}).forEach(color => {\n      if (color !== color.trim()) {\n        console.warn(`[theme-ui] Key \\`${color}\\` in theme.colors contains leading/trailing ` + 'whitespace, which can cause bugs in your project.');\n      }\n    });\n  }\n\n  const newTheme = useThemeWithAppliedColorMode({\n    colorMode,\n    outerTheme\n  });\n  const newCtx = { ...outerCtx,\n    theme: newTheme,\n    colorMode,\n    setColorMode\n  };\n  return /*#__PURE__*/React.createElement(__ThemeUIInternalBaseThemeProvider, {\n    context: newCtx\n  }, /*#__PURE__*/React.createElement(GlobalColorStyles, {\n    theme: newTheme\n  }), children);\n};\n\nfunction useColorMode() {\n  const {\n    colorMode,\n    setColorMode\n  } = useThemeUI();\n\n  if (typeof setColorMode !== 'function') {\n    throw new Error(`[useColorMode] requires the ColorModeProvider component`);\n  } // We're allowing the user to specify a narrower type for its color mode name.\n\n\n  return [colorMode, setColorMode];\n}\n\nconst omitModes = colors => {\n  const res = { ...colors\n  };\n  delete res.modes;\n  return res;\n};\n\nfunction copyRawColors(colors, outerThemeRawColors) {\n  for (const [key, value] of Object.entries(colors)) {\n    if (typeof value === 'string' && !value.startsWith('var(')) {\n      outerThemeRawColors[key] = value;\n    } else if (typeof value === 'object') {\n      const newValue = { ...outerThemeRawColors[key]\n      };\n      copyRawColors(value, newValue);\n      outerThemeRawColors[key] = newValue;\n    }\n  }\n}\n\nfunction useThemeWithAppliedColorMode(_ref2) {\n  let {\n    outerTheme,\n    colorMode\n  } = _ref2;\n  const theme = useMemo(() => {\n    const res = { ...outerTheme\n    };\n    const modes = get(res, 'colors.modes', {});\n    const currentColorMode = get(modes, colorMode, {});\n\n    if (colorMode) {\n      res.colors = { ...res.colors,\n        ...currentColorMode\n      };\n    }\n\n    const {\n      useCustomProperties,\n      initialColorModeName = '__default'\n    } = outerTheme.config || outerTheme;\n    let outerThemeRawColors = outerTheme.rawColors || outerTheme.colors || {};\n\n    if (useCustomProperties !== false) {\n      const alreadyHasRawColors = res.rawColors != null;\n      const colors = res.colors || {};\n\n      if (alreadyHasRawColors) {\n        outerThemeRawColors = { ...outerThemeRawColors\n        };\n        copyRawColors(colors, outerThemeRawColors);\n\n        if (outerThemeRawColors.modes) {\n          outerThemeRawColors.modes[initialColorModeName] = omitModes(outerThemeRawColors);\n        }\n\n        res.rawColors = outerThemeRawColors;\n      } else {\n        if (!('modes' in outerThemeRawColors)) {\n          res.rawColors = colors;\n        } else {\n          const modes = {\n            [initialColorModeName]: omitModes(outerThemeRawColors),\n            ...outerThemeRawColors.modes\n          };\n          res.rawColors = { ...colors,\n            modes\n          };\n          /* modes doesn't match index signature by design */\n        }\n      }\n\n      res.colors = toCustomProperties(omitModes(outerThemeRawColors), 'colors');\n    }\n\n    return res;\n  }, [colorMode, outerTheme]);\n  return theme;\n}\n\nfunction GlobalColorStyles(_ref3) {\n  let {\n    theme\n  } = _ref3;\n  return jsx(Global, {\n    styles: () => {\n      return {\n        html: __createColorStyles(theme)\n      };\n    }\n  });\n}\n\nfunction NestedColorModeProvider(_ref4) {\n  let {\n    outerCtx,\n    children\n  } = _ref4;\n\n  var _newTheme$config2;\n\n  const newTheme = useThemeWithAppliedColorMode({\n    outerTheme: outerCtx.theme,\n    colorMode: outerCtx.colorMode\n  }); // Nested theme providers need to be rerendered after hydration for the correct\n  // color mode to apply.\n\n  const [needsRerender, setNeedsRerender] = useState( // Note: we could also check some \"ssr-enabled\" flag as an optimization for\n  // SPAs, as deeply nested theme providers will also pay a performance penalty\n  // for this SSR bug fix\n  () => {\n    var _newTheme$config;\n\n    return ((_newTheme$config = newTheme.config) == null ? void 0 : _newTheme$config.useLocalStorage) !== false;\n  });\n  useClientsideEffect(() => void setNeedsRerender(false), []);\n  const themeColors = newTheme.rawColors || newTheme.colors;\n  const useCustomProperties = (_newTheme$config2 = newTheme.config) == null ? void 0 : _newTheme$config2.useCustomProperties;\n  const colorVars = useMemo(() => {\n    if (useCustomProperties === false) {\n      return {};\n    }\n\n    const colors = themeColors || {};\n    return css(__createColorProperties(colors, colors.modes || {}))(newTheme);\n  }, [newTheme, themeColors, useCustomProperties]);\n  return /*#__PURE__*/React.createElement(__ThemeUIInternalBaseThemeProvider, {\n    context: { ...outerCtx,\n      theme: newTheme\n    }\n  }, jsx('div', {\n    'data-themeui-nested-provider': true,\n    // the key here ensures that children will be rerendered after color\n    // mode is read from localStorage\n    key: Number(needsRerender),\n    suppressHydrationWarning: true,\n    css: colorVars,\n    children\n  }));\n}\n\nconst ColorModeProvider = _ref5 => {\n  let {\n    children\n  } = _ref5;\n  const outerCtx = useThemeUI();\n  const isTopLevelColorModeProvider = typeof outerCtx.setColorMode !== 'function';\n  return isTopLevelColorModeProvider ? /*#__PURE__*/React.createElement(TopLevelColorModeProvider, {\n    outerCtx: outerCtx\n  }, children) : /*#__PURE__*/React.createElement(NestedColorModeProvider, {\n    outerCtx: outerCtx\n  }, children);\n};\n\nconst noflash = `(function() { try {\n  var mode = localStorage.getItem('theme-ui-color-mode');\n  if (!mode) return\n  document.documentElement.classList.add('theme-ui-' + mode);\n} catch (e) {} })();`;\n\nconst InitializeColorMode = () => jsx('script', {\n  key: 'theme-ui-no-flash',\n  dangerouslySetInnerHTML: {\n    __html: noflash\n  }\n});\n\nexport { ColorModeProvider, InitializeColorMode, useColorMode };","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","useLayoutEffect","useThemeUI","jsx","__ThemeUIInternalBaseThemeProvider","css","get","Global","toVarName","key","replace","toVarValue","join","args","filter","Boolean","reservedKeys","Set","toCustomProperties","obj","parent","next","Array","isArray","value","name","has","__objectToVars","vars","__createColorStyles","theme","useCustomProperties","initialColorModeName","printColorModeName","useRootStyles","config","colors","rawColors","color","bg","modes","styles","__createColorProperties","printMode","console","error","colorToVarValue","Object","keys","forEach","mode","className","STORAGE_KEY","DARK_QUERY","LIGHT_QUERY","storage","window","localStorage","getItem","err","warn","set","setItem","getPreferredColorScheme","matchMedia","matches","useClientsideEffect","TopLevelColorModeProvider","outerCtx","children","outerTheme","useColorSchemeMediaQuery","useLocalStorage","colorMode","setColorMode","preferredMode","stored","document","documentElement","classList","remove","setPreferredColorScheme","preferredColorScheme","darkMQL","addEventListener","addListener","removeEventListener","removeListener","process","env","NODE_ENV","_outerTheme$colors","_outerTheme$colors2","indexOf","allColorKeys","flattenKeys","push","trim","newTheme","useThemeWithAppliedColorMode","newCtx","createElement","context","GlobalColorStyles","useColorMode","Error","omitModes","res","copyRawColors","outerThemeRawColors","entries","startsWith","newValue","currentColorMode","alreadyHasRawColors","html","NestedColorModeProvider","_newTheme$config2","needsRerender","setNeedsRerender","_newTheme$config","themeColors","colorVars","Number","suppressHydrationWarning","ColorModeProvider","isTopLevelColorModeProvider","noflash","InitializeColorMode","dangerouslySetInnerHTML","__html"],"sources":["C:/Users/voram/Downloads/website-pawzsible-main/website-pawzsible-main/node_modules/@theme-ui/color-modes/dist/theme-ui-color-modes.esm.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo, useLayoutEffect } from 'react';\nimport { useThemeUI, jsx, __ThemeUIInternalBaseThemeProvider } from '@theme-ui/core';\nimport { css, get } from '@theme-ui/css';\nimport { Global } from '@emotion/react';\n\nconst toVarName = key => `--theme-ui-${key.replace('-__default', '')}`;\n\nconst toVarValue = key => `var(${toVarName(key)})`;\n\nconst join = (...args) => args.filter(Boolean).join('-');\n\nconst reservedKeys = new Set(['useCustomProperties', 'initialColorModeName', 'printColorModeName', 'initialColorMode', 'useLocalStorage', 'config']); // convert theme values to custom properties\n\nconst toCustomProperties = (obj, parent) => {\n  const next = Array.isArray(obj) ? [] : {};\n\n  for (let key in obj) {\n    const value = obj[key];\n    const name = join(parent, key);\n\n    if (value && typeof value === 'object') {\n      next[key] = toCustomProperties(value, name);\n      continue;\n    }\n\n    if (reservedKeys.has(key)) {\n      next[key] = value;\n      continue;\n    }\n\n    next[key] = toVarValue(name);\n  }\n\n  return next;\n};\n/**\n * @internal\n * Recursively transforms an object into CSS variables excluding \"modes\" key.\n */\n\nconst __objectToVars = (parent, obj) => {\n  let vars = {};\n\n  for (let key in obj) {\n    if (key === 'modes') continue;\n    const name = join(parent, key);\n    const value = obj[key];\n\n    if (value && typeof value === 'object') {\n      vars = { ...vars,\n        ...__objectToVars(name, value)\n      };\n    } else {\n      vars[toVarName(name)] = value;\n    }\n  }\n\n  return vars;\n};\n/**\n * @internal\n * Creates root styles for color modes.\n * - Transforms color scale into CSS variables.\n * - Sets background and text color.\n */\n\nconst __createColorStyles = (theme = {}) => {\n  const {\n    useCustomProperties,\n    initialColorModeName,\n    printColorModeName,\n    useRootStyles\n  } = theme.config || theme || {};\n  const colors = theme.rawColors || theme.colors;\n  if (!colors || useRootStyles === false) return {};\n\n  if (useCustomProperties === false) {\n    return css({\n      color: 'text',\n      bg: 'background'\n    })(theme);\n  }\n\n  const modes = colors.modes || {};\n\n  const styles = __createColorProperties(colors, modes);\n\n  if (printColorModeName) {\n    let printMode = modes[printColorModeName];\n    if (!printMode && printColorModeName === initialColorModeName) printMode = colors;\n\n    if (printMode) {\n      styles['@media print'] = __objectToVars('colors', printMode);\n    } else {\n      console.error(`Theme UI \\`printColorModeName\\` was not found in colors scale`, {\n        colors,\n        printColorModeName\n      });\n    }\n  }\n\n  const colorToVarValue = color => toVarValue(`colors-${color}`);\n\n  return css({ ...styles,\n    color: colorToVarValue('text'),\n    bg: colorToVarValue('background')\n  })(theme);\n};\n/**\n * @internal\n * Returns an object with colors turned into Custom CSS Properties and\n * .theme-ui-<colormode> classes used for no-flash serverside rendering.\n */\n\nfunction __createColorProperties(colors, modes) {\n  const styles = __objectToVars('colors', colors);\n\n  Object.keys(modes).forEach(mode => {\n    const className = `.theme-ui-${mode}`;\n    const key = `&${className}, ${className} &`;\n    styles[key] = __objectToVars('colors', modes[mode]);\n  });\n  return styles;\n}\n\nconst STORAGE_KEY = 'theme-ui-color-mode';\nconst DARK_QUERY = '(prefers-color-scheme: dark)';\nconst LIGHT_QUERY = '(prefers-color-scheme: light)';\nconst storage = {\n  get: () => {\n    try {\n      return window.localStorage.getItem(STORAGE_KEY);\n    } catch (err) {\n      console.warn('localStorage is disabled and color mode might not work as expected.', 'Please check your Site Settings.', err);\n    }\n  },\n  set: value => {\n    try {\n      window.localStorage.setItem(STORAGE_KEY, value);\n    } catch (err) {\n      console.warn('localStorage is disabled and color mode might not work as expected.', 'Please check your Site Settings.', err);\n    }\n  }\n};\n\nconst getPreferredColorScheme = () => {\n  if (typeof window !== 'undefined' && window.matchMedia) {\n    if (window.matchMedia(DARK_QUERY).matches) {\n      return 'dark';\n    }\n\n    if (window.matchMedia(LIGHT_QUERY).matches) {\n      return 'light';\n    }\n  }\n\n  return null;\n};\n\nconst useClientsideEffect = typeof window === 'undefined' ? () => {} : useLayoutEffect;\n\nconst TopLevelColorModeProvider = ({\n  outerCtx,\n  children\n}) => {\n  const outerTheme = outerCtx.theme || {};\n  const {\n    initialColorModeName,\n    useColorSchemeMediaQuery,\n    useLocalStorage\n  } = outerTheme.config || outerTheme;\n  let [colorMode, setColorMode] = useState(() => {\n    const preferredMode = useColorSchemeMediaQuery !== false && getPreferredColorScheme();\n    return preferredMode || initialColorModeName;\n  }); // on first render, we read the color mode from localStorage and\n  // clear the class on document element body\n\n  useClientsideEffect(() => {\n    const stored = useLocalStorage !== false && storage.get();\n\n    if (typeof document !== 'undefined') {\n      document.documentElement.classList.remove('theme-ui-' + stored);\n    }\n\n    if (useColorSchemeMediaQuery !== 'system' && stored && stored !== colorMode) {\n      colorMode = stored;\n      setColorMode(stored);\n    }\n  }, []); // when mode changes, we save it to localStorage\n\n  useEffect(() => {\n    if (colorMode && useLocalStorage !== false) {\n      storage.set(colorMode);\n    }\n  }, [colorMode, useLocalStorage]);\n  const setPreferredColorScheme = useCallback(() => {\n    const preferredColorScheme = getPreferredColorScheme();\n    setColorMode(preferredColorScheme || initialColorModeName);\n  }, [initialColorModeName]);\n  useEffect(() => {\n    if (useColorSchemeMediaQuery === 'system' && window.matchMedia) {\n      // It doesn't matter if we add the listener only to the dark media query\n      // Because in our callback function we'll check for both media queries (light and dark).\n      const darkMQL = window.matchMedia(DARK_QUERY);\n\n      if (typeof darkMQL.addEventListener === 'function') {\n        darkMQL.addEventListener('change', setPreferredColorScheme);\n      } else if (typeof darkMQL.addListener === 'function') {\n        darkMQL.addListener(setPreferredColorScheme);\n      }\n    }\n\n    return () => {\n      if (useColorSchemeMediaQuery === 'system' && window.matchMedia) {\n        const darkMQL = window.matchMedia(DARK_QUERY);\n\n        if (typeof darkMQL.removeEventListener === 'function') {\n          darkMQL.removeEventListener('change', setPreferredColorScheme);\n        } else if (typeof darkMQL.removeListener === 'function') {\n          darkMQL.removeListener(setPreferredColorScheme);\n        }\n      }\n    };\n  }, [useColorSchemeMediaQuery, setPreferredColorScheme]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    var _outerTheme$colors, _outerTheme$colors2;\n\n    if ((_outerTheme$colors = outerTheme.colors) != null && _outerTheme$colors.modes && initialColorModeName && Object.keys(outerTheme.colors.modes).indexOf(initialColorModeName) > -1) {\n      console.warn('[theme-ui] The `initialColorModeName` value should be a unique name' + ' and cannot reference a key in `theme.colors.modes`.');\n    }\n\n    const allColorKeys = [];\n\n    const flattenKeys = obj => {\n      Object.keys(obj).forEach(key => {\n        allColorKeys.push(key);\n\n        if (typeof obj[key] === 'object') {\n          flattenKeys(obj[key]);\n        }\n      });\n      return allColorKeys;\n    };\n\n    flattenKeys((_outerTheme$colors2 = outerTheme.colors) != null ? _outerTheme$colors2 : {}).forEach(color => {\n      if (color !== color.trim()) {\n        console.warn(`[theme-ui] Key \\`${color}\\` in theme.colors contains leading/trailing ` + 'whitespace, which can cause bugs in your project.');\n      }\n    });\n  }\n\n  const newTheme = useThemeWithAppliedColorMode({\n    colorMode,\n    outerTheme\n  });\n  const newCtx = { ...outerCtx,\n    theme: newTheme,\n    colorMode,\n    setColorMode\n  };\n  return /*#__PURE__*/React.createElement(__ThemeUIInternalBaseThemeProvider, {\n    context: newCtx\n  }, /*#__PURE__*/React.createElement(GlobalColorStyles, {\n    theme: newTheme\n  }), children);\n};\n\nfunction useColorMode() {\n  const {\n    colorMode,\n    setColorMode\n  } = useThemeUI();\n\n  if (typeof setColorMode !== 'function') {\n    throw new Error(`[useColorMode] requires the ColorModeProvider component`);\n  } // We're allowing the user to specify a narrower type for its color mode name.\n\n\n  return [colorMode, setColorMode];\n}\n\nconst omitModes = colors => {\n  const res = { ...colors\n  };\n  delete res.modes;\n  return res;\n};\n\nfunction copyRawColors(colors, outerThemeRawColors) {\n  for (const [key, value] of Object.entries(colors)) {\n    if (typeof value === 'string' && !value.startsWith('var(')) {\n      outerThemeRawColors[key] = value;\n    } else if (typeof value === 'object') {\n      const newValue = { ...outerThemeRawColors[key]\n      };\n      copyRawColors(value, newValue);\n      outerThemeRawColors[key] = newValue;\n    }\n  }\n}\n\nfunction useThemeWithAppliedColorMode({\n  outerTheme,\n  colorMode\n}) {\n  const theme = useMemo(() => {\n    const res = { ...outerTheme\n    };\n    const modes = get(res, 'colors.modes', {});\n    const currentColorMode = get(modes, colorMode, {});\n\n    if (colorMode) {\n      res.colors = { ...res.colors,\n        ...currentColorMode\n      };\n    }\n\n    const {\n      useCustomProperties,\n      initialColorModeName = '__default'\n    } = outerTheme.config || outerTheme;\n    let outerThemeRawColors = outerTheme.rawColors || outerTheme.colors || {};\n\n    if (useCustomProperties !== false) {\n      const alreadyHasRawColors = res.rawColors != null;\n      const colors = res.colors || {};\n\n      if (alreadyHasRawColors) {\n        outerThemeRawColors = { ...outerThemeRawColors\n        };\n        copyRawColors(colors, outerThemeRawColors);\n\n        if (outerThemeRawColors.modes) {\n          outerThemeRawColors.modes[initialColorModeName] = omitModes(outerThemeRawColors);\n        }\n\n        res.rawColors = outerThemeRawColors;\n      } else {\n        if (!('modes' in outerThemeRawColors)) {\n          res.rawColors = colors;\n        } else {\n          const modes = {\n            [initialColorModeName]: omitModes(outerThemeRawColors),\n            ...outerThemeRawColors.modes\n          };\n          res.rawColors = { ...colors,\n            modes\n          };\n          /* modes doesn't match index signature by design */\n        }\n      }\n\n      res.colors = toCustomProperties(omitModes(outerThemeRawColors), 'colors');\n    }\n\n    return res;\n  }, [colorMode, outerTheme]);\n  return theme;\n}\n\nfunction GlobalColorStyles({\n  theme\n}) {\n  return jsx(Global, {\n    styles: () => {\n      return {\n        html: __createColorStyles(theme)\n      };\n    }\n  });\n}\n\nfunction NestedColorModeProvider({\n  outerCtx,\n  children\n}) {\n  var _newTheme$config2;\n\n  const newTheme = useThemeWithAppliedColorMode({\n    outerTheme: outerCtx.theme,\n    colorMode: outerCtx.colorMode\n  }); // Nested theme providers need to be rerendered after hydration for the correct\n  // color mode to apply.\n\n  const [needsRerender, setNeedsRerender] = useState( // Note: we could also check some \"ssr-enabled\" flag as an optimization for\n  // SPAs, as deeply nested theme providers will also pay a performance penalty\n  // for this SSR bug fix\n  () => {\n    var _newTheme$config;\n\n    return ((_newTheme$config = newTheme.config) == null ? void 0 : _newTheme$config.useLocalStorage) !== false;\n  });\n  useClientsideEffect(() => void setNeedsRerender(false), []);\n  const themeColors = newTheme.rawColors || newTheme.colors;\n  const useCustomProperties = (_newTheme$config2 = newTheme.config) == null ? void 0 : _newTheme$config2.useCustomProperties;\n  const colorVars = useMemo(() => {\n    if (useCustomProperties === false) {\n      return {};\n    }\n\n    const colors = themeColors || {};\n    return css(__createColorProperties(colors, colors.modes || {}))(newTheme);\n  }, [newTheme, themeColors, useCustomProperties]);\n  return /*#__PURE__*/React.createElement(__ThemeUIInternalBaseThemeProvider, {\n    context: { ...outerCtx,\n      theme: newTheme\n    }\n  }, jsx('div', {\n    'data-themeui-nested-provider': true,\n    // the key here ensures that children will be rerendered after color\n    // mode is read from localStorage\n    key: Number(needsRerender),\n    suppressHydrationWarning: true,\n    css: colorVars,\n    children\n  }));\n}\n\nconst ColorModeProvider = ({\n  children\n}) => {\n  const outerCtx = useThemeUI();\n  const isTopLevelColorModeProvider = typeof outerCtx.setColorMode !== 'function';\n  return isTopLevelColorModeProvider ? /*#__PURE__*/React.createElement(TopLevelColorModeProvider, {\n    outerCtx: outerCtx\n  }, children) : /*#__PURE__*/React.createElement(NestedColorModeProvider, {\n    outerCtx: outerCtx\n  }, children);\n};\nconst noflash = `(function() { try {\n  var mode = localStorage.getItem('theme-ui-color-mode');\n  if (!mode) return\n  document.documentElement.classList.add('theme-ui-' + mode);\n} catch (e) {} })();`;\nconst InitializeColorMode = () => jsx('script', {\n  key: 'theme-ui-no-flash',\n  dangerouslySetInnerHTML: {\n    __html: noflash\n  }\n});\n\nexport { ColorModeProvider, InitializeColorMode, useColorMode };\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,EAAkDC,OAAlD,EAA2DC,eAA3D,QAAkF,OAAlF;AACA,SAASC,UAAT,EAAqBC,GAArB,EAA0BC,kCAA1B,QAAoE,gBAApE;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,eAAzB;AACA,SAASC,MAAT,QAAuB,gBAAvB;;AAEA,MAAMC,SAAS,GAAGC,GAAG,IAAK,cAAaA,GAAG,CAACC,OAAJ,CAAY,YAAZ,EAA0B,EAA1B,CAA8B,EAArE;;AAEA,MAAMC,UAAU,GAAGF,GAAG,IAAK,OAAMD,SAAS,CAACC,GAAD,CAAM,GAAhD;;AAEA,MAAMG,IAAI,GAAG;EAAA,kCAAIC,IAAJ;IAAIA,IAAJ;EAAA;;EAAA,OAAaA,IAAI,CAACC,MAAL,CAAYC,OAAZ,EAAqBH,IAArB,CAA0B,GAA1B,CAAb;AAAA,CAAb;;AAEA,MAAMI,YAAY,GAAG,IAAIC,GAAJ,CAAQ,CAAC,qBAAD,EAAwB,sBAAxB,EAAgD,oBAAhD,EAAsE,kBAAtE,EAA0F,iBAA1F,EAA6G,QAA7G,CAAR,CAArB,C,CAAsJ;;AAEtJ,MAAMC,kBAAkB,GAAG,CAACC,GAAD,EAAMC,MAAN,KAAiB;EAC1C,MAAMC,IAAI,GAAGC,KAAK,CAACC,OAAN,CAAcJ,GAAd,IAAqB,EAArB,GAA0B,EAAvC;;EAEA,KAAK,IAAIV,GAAT,IAAgBU,GAAhB,EAAqB;IACnB,MAAMK,KAAK,GAAGL,GAAG,CAACV,GAAD,CAAjB;IACA,MAAMgB,IAAI,GAAGb,IAAI,CAACQ,MAAD,EAASX,GAAT,CAAjB;;IAEA,IAAIe,KAAK,IAAI,OAAOA,KAAP,KAAiB,QAA9B,EAAwC;MACtCH,IAAI,CAACZ,GAAD,CAAJ,GAAYS,kBAAkB,CAACM,KAAD,EAAQC,IAAR,CAA9B;MACA;IACD;;IAED,IAAIT,YAAY,CAACU,GAAb,CAAiBjB,GAAjB,CAAJ,EAA2B;MACzBY,IAAI,CAACZ,GAAD,CAAJ,GAAYe,KAAZ;MACA;IACD;;IAEDH,IAAI,CAACZ,GAAD,CAAJ,GAAYE,UAAU,CAACc,IAAD,CAAtB;EACD;;EAED,OAAOJ,IAAP;AACD,CArBD;AAsBA;AACA;AACA;AACA;;;AAEA,MAAMM,cAAc,GAAG,CAACP,MAAD,EAASD,GAAT,KAAiB;EACtC,IAAIS,IAAI,GAAG,EAAX;;EAEA,KAAK,IAAInB,GAAT,IAAgBU,GAAhB,EAAqB;IACnB,IAAIV,GAAG,KAAK,OAAZ,EAAqB;IACrB,MAAMgB,IAAI,GAAGb,IAAI,CAACQ,MAAD,EAASX,GAAT,CAAjB;IACA,MAAMe,KAAK,GAAGL,GAAG,CAACV,GAAD,CAAjB;;IAEA,IAAIe,KAAK,IAAI,OAAOA,KAAP,KAAiB,QAA9B,EAAwC;MACtCI,IAAI,GAAG,EAAE,GAAGA,IAAL;QACL,GAAGD,cAAc,CAACF,IAAD,EAAOD,KAAP;MADZ,CAAP;IAGD,CAJD,MAIO;MACLI,IAAI,CAACpB,SAAS,CAACiB,IAAD,CAAV,CAAJ,GAAwBD,KAAxB;IACD;EACF;;EAED,OAAOI,IAAP;AACD,CAlBD;AAmBA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,mBAAmB,GAAG,YAAgB;EAAA,IAAfC,KAAe,uEAAP,EAAO;EAC1C,MAAM;IACJC,mBADI;IAEJC,oBAFI;IAGJC,kBAHI;IAIJC;EAJI,IAKFJ,KAAK,CAACK,MAAN,IAAgBL,KAAhB,IAAyB,EAL7B;EAMA,MAAMM,MAAM,GAAGN,KAAK,CAACO,SAAN,IAAmBP,KAAK,CAACM,MAAxC;EACA,IAAI,CAACA,MAAD,IAAWF,aAAa,KAAK,KAAjC,EAAwC,OAAO,EAAP;;EAExC,IAAIH,mBAAmB,KAAK,KAA5B,EAAmC;IACjC,OAAO1B,GAAG,CAAC;MACTiC,KAAK,EAAE,MADE;MAETC,EAAE,EAAE;IAFK,CAAD,CAAH,CAGJT,KAHI,CAAP;EAID;;EAED,MAAMU,KAAK,GAAGJ,MAAM,CAACI,KAAP,IAAgB,EAA9B;;EAEA,MAAMC,MAAM,GAAGC,uBAAuB,CAACN,MAAD,EAASI,KAAT,CAAtC;;EAEA,IAAIP,kBAAJ,EAAwB;IACtB,IAAIU,SAAS,GAAGH,KAAK,CAACP,kBAAD,CAArB;IACA,IAAI,CAACU,SAAD,IAAcV,kBAAkB,KAAKD,oBAAzC,EAA+DW,SAAS,GAAGP,MAAZ;;IAE/D,IAAIO,SAAJ,EAAe;MACbF,MAAM,CAAC,cAAD,CAAN,GAAyBd,cAAc,CAAC,QAAD,EAAWgB,SAAX,CAAvC;IACD,CAFD,MAEO;MACLC,OAAO,CAACC,KAAR,CAAe,+DAAf,EAA+E;QAC7ET,MAD6E;QAE7EH;MAF6E,CAA/E;IAID;EACF;;EAED,MAAMa,eAAe,GAAGR,KAAK,IAAI3B,UAAU,CAAE,UAAS2B,KAAM,EAAjB,CAA3C;;EAEA,OAAOjC,GAAG,CAAC,EAAE,GAAGoC,MAAL;IACTH,KAAK,EAAEQ,eAAe,CAAC,MAAD,CADb;IAETP,EAAE,EAAEO,eAAe,CAAC,YAAD;EAFV,CAAD,CAAH,CAGJhB,KAHI,CAAP;AAID,CAzCD;AA0CA;AACA;AACA;AACA;AACA;;;AAEA,SAASY,uBAAT,CAAiCN,MAAjC,EAAyCI,KAAzC,EAAgD;EAC9C,MAAMC,MAAM,GAAGd,cAAc,CAAC,QAAD,EAAWS,MAAX,CAA7B;;EAEAW,MAAM,CAACC,IAAP,CAAYR,KAAZ,EAAmBS,OAAnB,CAA2BC,IAAI,IAAI;IACjC,MAAMC,SAAS,GAAI,aAAYD,IAAK,EAApC;IACA,MAAMzC,GAAG,GAAI,IAAG0C,SAAU,KAAIA,SAAU,IAAxC;IACAV,MAAM,CAAChC,GAAD,CAAN,GAAckB,cAAc,CAAC,QAAD,EAAWa,KAAK,CAACU,IAAD,CAAhB,CAA5B;EACD,CAJD;EAKA,OAAOT,MAAP;AACD;;AAED,MAAMW,WAAW,GAAG,qBAApB;AACA,MAAMC,UAAU,GAAG,8BAAnB;AACA,MAAMC,WAAW,GAAG,+BAApB;AACA,MAAMC,OAAO,GAAG;EACdjD,GAAG,EAAE,MAAM;IACT,IAAI;MACF,OAAOkD,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BN,WAA5B,CAAP;IACD,CAFD,CAEE,OAAOO,GAAP,EAAY;MACZf,OAAO,CAACgB,IAAR,CAAa,qEAAb,EAAoF,kCAApF,EAAwHD,GAAxH;IACD;EACF,CAPa;EAQdE,GAAG,EAAErC,KAAK,IAAI;IACZ,IAAI;MACFgC,MAAM,CAACC,YAAP,CAAoBK,OAApB,CAA4BV,WAA5B,EAAyC5B,KAAzC;IACD,CAFD,CAEE,OAAOmC,GAAP,EAAY;MACZf,OAAO,CAACgB,IAAR,CAAa,qEAAb,EAAoF,kCAApF,EAAwHD,GAAxH;IACD;EACF;AAda,CAAhB;;AAiBA,MAAMI,uBAAuB,GAAG,MAAM;EACpC,IAAI,OAAOP,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACQ,UAA5C,EAAwD;IACtD,IAAIR,MAAM,CAACQ,UAAP,CAAkBX,UAAlB,EAA8BY,OAAlC,EAA2C;MACzC,OAAO,MAAP;IACD;;IAED,IAAIT,MAAM,CAACQ,UAAP,CAAkBV,WAAlB,EAA+BW,OAAnC,EAA4C;MAC1C,OAAO,OAAP;IACD;EACF;;EAED,OAAO,IAAP;AACD,CAZD;;AAcA,MAAMC,mBAAmB,GAAG,OAAOV,MAAP,KAAkB,WAAlB,GAAgC,MAAM,CAAE,CAAxC,GAA2CvD,eAAvE;;AAEA,MAAMkE,yBAAyB,GAAG,QAG5B;EAAA,IAH6B;IACjCC,QADiC;IAEjCC;EAFiC,CAG7B;EACJ,MAAMC,UAAU,GAAGF,QAAQ,CAACtC,KAAT,IAAkB,EAArC;EACA,MAAM;IACJE,oBADI;IAEJuC,wBAFI;IAGJC;EAHI,IAIFF,UAAU,CAACnC,MAAX,IAAqBmC,UAJzB;EAKA,IAAI,CAACG,SAAD,EAAYC,YAAZ,IAA4B7E,QAAQ,CAAC,MAAM;IAC7C,MAAM8E,aAAa,GAAGJ,wBAAwB,KAAK,KAA7B,IAAsCR,uBAAuB,EAAnF;IACA,OAAOY,aAAa,IAAI3C,oBAAxB;EACD,CAHuC,CAAxC,CAPI,CAUA;EACJ;;EAEAkC,mBAAmB,CAAC,MAAM;IACxB,MAAMU,MAAM,GAAGJ,eAAe,KAAK,KAApB,IAA6BjB,OAAO,CAACjD,GAAR,EAA5C;;IAEA,IAAI,OAAOuE,QAAP,KAAoB,WAAxB,EAAqC;MACnCA,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,CAAmCC,MAAnC,CAA0C,cAAcJ,MAAxD;IACD;;IAED,IAAIL,wBAAwB,KAAK,QAA7B,IAAyCK,MAAzC,IAAmDA,MAAM,KAAKH,SAAlE,EAA6E;MAC3EA,SAAS,GAAGG,MAAZ;MACAF,YAAY,CAACE,MAAD,CAAZ;IACD;EACF,CAXkB,EAWhB,EAXgB,CAAnB,CAbI,CAwBI;;EAER9E,SAAS,CAAC,MAAM;IACd,IAAI2E,SAAS,IAAID,eAAe,KAAK,KAArC,EAA4C;MAC1CjB,OAAO,CAACM,GAAR,CAAYY,SAAZ;IACD;EACF,CAJQ,EAIN,CAACA,SAAD,EAAYD,eAAZ,CAJM,CAAT;EAKA,MAAMS,uBAAuB,GAAGlF,WAAW,CAAC,MAAM;IAChD,MAAMmF,oBAAoB,GAAGnB,uBAAuB,EAApD;IACAW,YAAY,CAACQ,oBAAoB,IAAIlD,oBAAzB,CAAZ;EACD,CAH0C,EAGxC,CAACA,oBAAD,CAHwC,CAA3C;EAIAlC,SAAS,CAAC,MAAM;IACd,IAAIyE,wBAAwB,KAAK,QAA7B,IAAyCf,MAAM,CAACQ,UAApD,EAAgE;MAC9D;MACA;MACA,MAAMmB,OAAO,GAAG3B,MAAM,CAACQ,UAAP,CAAkBX,UAAlB,CAAhB;;MAEA,IAAI,OAAO8B,OAAO,CAACC,gBAAf,KAAoC,UAAxC,EAAoD;QAClDD,OAAO,CAACC,gBAAR,CAAyB,QAAzB,EAAmCH,uBAAnC;MACD,CAFD,MAEO,IAAI,OAAOE,OAAO,CAACE,WAAf,KAA+B,UAAnC,EAA+C;QACpDF,OAAO,CAACE,WAAR,CAAoBJ,uBAApB;MACD;IACF;;IAED,OAAO,MAAM;MACX,IAAIV,wBAAwB,KAAK,QAA7B,IAAyCf,MAAM,CAACQ,UAApD,EAAgE;QAC9D,MAAMmB,OAAO,GAAG3B,MAAM,CAACQ,UAAP,CAAkBX,UAAlB,CAAhB;;QAEA,IAAI,OAAO8B,OAAO,CAACG,mBAAf,KAAuC,UAA3C,EAAuD;UACrDH,OAAO,CAACG,mBAAR,CAA4B,QAA5B,EAAsCL,uBAAtC;QACD,CAFD,MAEO,IAAI,OAAOE,OAAO,CAACI,cAAf,KAAkC,UAAtC,EAAkD;UACvDJ,OAAO,CAACI,cAAR,CAAuBN,uBAAvB;QACD;MACF;IACF,CAVD;EAWD,CAxBQ,EAwBN,CAACV,wBAAD,EAA2BU,uBAA3B,CAxBM,CAAT;;EA0BA,IAAIO,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;IACzC,IAAIC,kBAAJ,EAAwBC,mBAAxB;;IAEA,IAAI,CAACD,kBAAkB,GAAGrB,UAAU,CAAClC,MAAjC,KAA4C,IAA5C,IAAoDuD,kBAAkB,CAACnD,KAAvE,IAAgFR,oBAAhF,IAAwGe,MAAM,CAACC,IAAP,CAAYsB,UAAU,CAAClC,MAAX,CAAkBI,KAA9B,EAAqCqD,OAArC,CAA6C7D,oBAA7C,IAAqE,CAAC,CAAlL,EAAqL;MACnLY,OAAO,CAACgB,IAAR,CAAa,wEAAwE,sDAArF;IACD;;IAED,MAAMkC,YAAY,GAAG,EAArB;;IAEA,MAAMC,WAAW,GAAG5E,GAAG,IAAI;MACzB4B,MAAM,CAACC,IAAP,CAAY7B,GAAZ,EAAiB8B,OAAjB,CAAyBxC,GAAG,IAAI;QAC9BqF,YAAY,CAACE,IAAb,CAAkBvF,GAAlB;;QAEA,IAAI,OAAOU,GAAG,CAACV,GAAD,CAAV,KAAoB,QAAxB,EAAkC;UAChCsF,WAAW,CAAC5E,GAAG,CAACV,GAAD,CAAJ,CAAX;QACD;MACF,CAND;MAOA,OAAOqF,YAAP;IACD,CATD;;IAWAC,WAAW,CAAC,CAACH,mBAAmB,GAAGtB,UAAU,CAAClC,MAAlC,KAA6C,IAA7C,GAAoDwD,mBAApD,GAA0E,EAA3E,CAAX,CAA0F3C,OAA1F,CAAkGX,KAAK,IAAI;MACzG,IAAIA,KAAK,KAAKA,KAAK,CAAC2D,IAAN,EAAd,EAA4B;QAC1BrD,OAAO,CAACgB,IAAR,CAAc,oBAAmBtB,KAAM,+CAA1B,GAA2E,mDAAxF;MACD;IACF,CAJD;EAKD;;EAED,MAAM4D,QAAQ,GAAGC,4BAA4B,CAAC;IAC5C1B,SAD4C;IAE5CH;EAF4C,CAAD,CAA7C;EAIA,MAAM8B,MAAM,GAAG,EAAE,GAAGhC,QAAL;IACbtC,KAAK,EAAEoE,QADM;IAEbzB,SAFa;IAGbC;EAHa,CAAf;EAKA,OAAO,aAAa9E,KAAK,CAACyG,aAAN,CAAoBjG,kCAApB,EAAwD;IAC1EkG,OAAO,EAAEF;EADiE,CAAxD,EAEjB,aAAaxG,KAAK,CAACyG,aAAN,CAAoBE,iBAApB,EAAuC;IACrDzE,KAAK,EAAEoE;EAD8C,CAAvC,CAFI,EAIhB7B,QAJgB,CAApB;AAKD,CAzGD;;AA2GA,SAASmC,YAAT,GAAwB;EACtB,MAAM;IACJ/B,SADI;IAEJC;EAFI,IAGFxE,UAAU,EAHd;;EAKA,IAAI,OAAOwE,YAAP,KAAwB,UAA5B,EAAwC;IACtC,MAAM,IAAI+B,KAAJ,CAAW,yDAAX,CAAN;EACD,CARqB,CAQpB;;;EAGF,OAAO,CAAChC,SAAD,EAAYC,YAAZ,CAAP;AACD;;AAED,MAAMgC,SAAS,GAAGtE,MAAM,IAAI;EAC1B,MAAMuE,GAAG,GAAG,EAAE,GAAGvE;EAAL,CAAZ;EAEA,OAAOuE,GAAG,CAACnE,KAAX;EACA,OAAOmE,GAAP;AACD,CALD;;AAOA,SAASC,aAAT,CAAuBxE,MAAvB,EAA+ByE,mBAA/B,EAAoD;EAClD,KAAK,MAAM,CAACpG,GAAD,EAAMe,KAAN,CAAX,IAA2BuB,MAAM,CAAC+D,OAAP,CAAe1E,MAAf,CAA3B,EAAmD;IACjD,IAAI,OAAOZ,KAAP,KAAiB,QAAjB,IAA6B,CAACA,KAAK,CAACuF,UAAN,CAAiB,MAAjB,CAAlC,EAA4D;MAC1DF,mBAAmB,CAACpG,GAAD,CAAnB,GAA2Be,KAA3B;IACD,CAFD,MAEO,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;MACpC,MAAMwF,QAAQ,GAAG,EAAE,GAAGH,mBAAmB,CAACpG,GAAD;MAAxB,CAAjB;MAEAmG,aAAa,CAACpF,KAAD,EAAQwF,QAAR,CAAb;MACAH,mBAAmB,CAACpG,GAAD,CAAnB,GAA2BuG,QAA3B;IACD;EACF;AACF;;AAED,SAASb,4BAAT,QAGG;EAAA,IAHmC;IACpC7B,UADoC;IAEpCG;EAFoC,CAGnC;EACD,MAAM3C,KAAK,GAAG9B,OAAO,CAAC,MAAM;IAC1B,MAAM2G,GAAG,GAAG,EAAE,GAAGrC;IAAL,CAAZ;IAEA,MAAM9B,KAAK,GAAGlC,GAAG,CAACqG,GAAD,EAAM,cAAN,EAAsB,EAAtB,CAAjB;IACA,MAAMM,gBAAgB,GAAG3G,GAAG,CAACkC,KAAD,EAAQiC,SAAR,EAAmB,EAAnB,CAA5B;;IAEA,IAAIA,SAAJ,EAAe;MACbkC,GAAG,CAACvE,MAAJ,GAAa,EAAE,GAAGuE,GAAG,CAACvE,MAAT;QACX,GAAG6E;MADQ,CAAb;IAGD;;IAED,MAAM;MACJlF,mBADI;MAEJC,oBAAoB,GAAG;IAFnB,IAGFsC,UAAU,CAACnC,MAAX,IAAqBmC,UAHzB;IAIA,IAAIuC,mBAAmB,GAAGvC,UAAU,CAACjC,SAAX,IAAwBiC,UAAU,CAAClC,MAAnC,IAA6C,EAAvE;;IAEA,IAAIL,mBAAmB,KAAK,KAA5B,EAAmC;MACjC,MAAMmF,mBAAmB,GAAGP,GAAG,CAACtE,SAAJ,IAAiB,IAA7C;MACA,MAAMD,MAAM,GAAGuE,GAAG,CAACvE,MAAJ,IAAc,EAA7B;;MAEA,IAAI8E,mBAAJ,EAAyB;QACvBL,mBAAmB,GAAG,EAAE,GAAGA;QAAL,CAAtB;QAEAD,aAAa,CAACxE,MAAD,EAASyE,mBAAT,CAAb;;QAEA,IAAIA,mBAAmB,CAACrE,KAAxB,EAA+B;UAC7BqE,mBAAmB,CAACrE,KAApB,CAA0BR,oBAA1B,IAAkD0E,SAAS,CAACG,mBAAD,CAA3D;QACD;;QAEDF,GAAG,CAACtE,SAAJ,GAAgBwE,mBAAhB;MACD,CAVD,MAUO;QACL,IAAI,EAAE,WAAWA,mBAAb,CAAJ,EAAuC;UACrCF,GAAG,CAACtE,SAAJ,GAAgBD,MAAhB;QACD,CAFD,MAEO;UACL,MAAMI,KAAK,GAAG;YACZ,CAACR,oBAAD,GAAwB0E,SAAS,CAACG,mBAAD,CADrB;YAEZ,GAAGA,mBAAmB,CAACrE;UAFX,CAAd;UAIAmE,GAAG,CAACtE,SAAJ,GAAgB,EAAE,GAAGD,MAAL;YACdI;UADc,CAAhB;UAGA;QACD;MACF;;MAEDmE,GAAG,CAACvE,MAAJ,GAAalB,kBAAkB,CAACwF,SAAS,CAACG,mBAAD,CAAV,EAAiC,QAAjC,CAA/B;IACD;;IAED,OAAOF,GAAP;EACD,CAnDoB,EAmDlB,CAAClC,SAAD,EAAYH,UAAZ,CAnDkB,CAArB;EAoDA,OAAOxC,KAAP;AACD;;AAED,SAASyE,iBAAT,QAEG;EAAA,IAFwB;IACzBzE;EADyB,CAExB;EACD,OAAO3B,GAAG,CAACI,MAAD,EAAS;IACjBkC,MAAM,EAAE,MAAM;MACZ,OAAO;QACL0E,IAAI,EAAEtF,mBAAmB,CAACC,KAAD;MADpB,CAAP;IAGD;EALgB,CAAT,CAAV;AAOD;;AAED,SAASsF,uBAAT,QAGG;EAAA,IAH8B;IAC/BhD,QAD+B;IAE/BC;EAF+B,CAG9B;;EACD,IAAIgD,iBAAJ;;EAEA,MAAMnB,QAAQ,GAAGC,4BAA4B,CAAC;IAC5C7B,UAAU,EAAEF,QAAQ,CAACtC,KADuB;IAE5C2C,SAAS,EAAEL,QAAQ,CAACK;EAFwB,CAAD,CAA7C,CAHC,CAMG;EACJ;;EAEA,MAAM,CAAC6C,aAAD,EAAgBC,gBAAhB,IAAoC1H,QAAQ,EAAE;EACpD;EACA;EACA,MAAM;IACJ,IAAI2H,gBAAJ;;IAEA,OAAO,CAAC,CAACA,gBAAgB,GAAGtB,QAAQ,CAAC/D,MAA7B,KAAwC,IAAxC,GAA+C,KAAK,CAApD,GAAwDqF,gBAAgB,CAAChD,eAA1E,MAA+F,KAAtG;EACD,CAPiD,CAAlD;EAQAN,mBAAmB,CAAC,MAAM,KAAKqD,gBAAgB,CAAC,KAAD,CAA5B,EAAqC,EAArC,CAAnB;EACA,MAAME,WAAW,GAAGvB,QAAQ,CAAC7D,SAAT,IAAsB6D,QAAQ,CAAC9D,MAAnD;EACA,MAAML,mBAAmB,GAAG,CAACsF,iBAAiB,GAAGnB,QAAQ,CAAC/D,MAA9B,KAAyC,IAAzC,GAAgD,KAAK,CAArD,GAAyDkF,iBAAiB,CAACtF,mBAAvG;EACA,MAAM2F,SAAS,GAAG1H,OAAO,CAAC,MAAM;IAC9B,IAAI+B,mBAAmB,KAAK,KAA5B,EAAmC;MACjC,OAAO,EAAP;IACD;;IAED,MAAMK,MAAM,GAAGqF,WAAW,IAAI,EAA9B;IACA,OAAOpH,GAAG,CAACqC,uBAAuB,CAACN,MAAD,EAASA,MAAM,CAACI,KAAP,IAAgB,EAAzB,CAAxB,CAAH,CAAyD0D,QAAzD,CAAP;EACD,CAPwB,EAOtB,CAACA,QAAD,EAAWuB,WAAX,EAAwB1F,mBAAxB,CAPsB,CAAzB;EAQA,OAAO,aAAanC,KAAK,CAACyG,aAAN,CAAoBjG,kCAApB,EAAwD;IAC1EkG,OAAO,EAAE,EAAE,GAAGlC,QAAL;MACPtC,KAAK,EAAEoE;IADA;EADiE,CAAxD,EAIjB/F,GAAG,CAAC,KAAD,EAAQ;IACZ,gCAAgC,IADpB;IAEZ;IACA;IACAM,GAAG,EAAEkH,MAAM,CAACL,aAAD,CAJC;IAKZM,wBAAwB,EAAE,IALd;IAMZvH,GAAG,EAAEqH,SANO;IAOZrD;EAPY,CAAR,CAJc,CAApB;AAaD;;AAED,MAAMwD,iBAAiB,GAAG,SAEpB;EAAA,IAFqB;IACzBxD;EADyB,CAErB;EACJ,MAAMD,QAAQ,GAAGlE,UAAU,EAA3B;EACA,MAAM4H,2BAA2B,GAAG,OAAO1D,QAAQ,CAACM,YAAhB,KAAiC,UAArE;EACA,OAAOoD,2BAA2B,GAAG,aAAalI,KAAK,CAACyG,aAAN,CAAoBlC,yBAApB,EAA+C;IAC/FC,QAAQ,EAAEA;EADqF,CAA/C,EAE/CC,QAF+C,CAAhB,GAEnB,aAAazE,KAAK,CAACyG,aAAN,CAAoBe,uBAApB,EAA6C;IACvEhD,QAAQ,EAAEA;EAD6D,CAA7C,EAEzBC,QAFyB,CAF5B;AAKD,CAVD;;AAWA,MAAM0D,OAAO,GAAI;AACjB;AACA;AACA;AACA,qBAJA;;AAKA,MAAMC,mBAAmB,GAAG,MAAM7H,GAAG,CAAC,QAAD,EAAW;EAC9CM,GAAG,EAAE,mBADyC;EAE9CwH,uBAAuB,EAAE;IACvBC,MAAM,EAAEH;EADe;AAFqB,CAAX,CAArC;;AAOA,SAASF,iBAAT,EAA4BG,mBAA5B,EAAiDxB,YAAjD"},"metadata":{},"sourceType":"module"}